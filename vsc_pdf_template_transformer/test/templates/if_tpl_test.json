{
  "t": "Document",
  "pageMode": "'none'",
  "children": [
    {
      "t": "MultiPage",
      "pageFormat": {
        "format": "'letter'"
      },
      "children": [
        {
          "t": "If",
          "expression": "true",
          "thenChild": {
            "t": "Text",
            "text": "'True expression - expected'"
          },
          "elseChild": {
            "t": "Text",
            "text": "'True expression - UNEXPECTED'"
          }
        },
        {
          "t": "If",
          "expression": "false",
          "thenChild": {
            "t": "Text",
            "text": "'False expression - UNEXPECTED'"
          },
          "elseChild": {
            "t": "Text",
            "text": "'False expression - expected'"
          }
        },
        {
          "t": "If",
          "expression": "null",
          "thenChild": {
            "t": "Text",
            "text": "'null expression - UNEXPECTED'"
          },
          "elseChild": {
            "t": "Text",
            "text": "'null expression - expected'"
          }
        },
        {
          "t": "If",
          "expression": "false",
          "elseChild": {
            "t": "Text",
            "text": "'false expression without thenChild - expected'"
          }
        },
        {
          "t": "If",
          "expression": "false"
        },
        {
          "t": "If",
          "expression": "true",
          "thenChild": {
            "t": "Text",
            "text": "'true expression without elseChild - expected'"
          }
        },
        {
          "t": "If",
          "expression": "true"
        },
        {
          "t": "If",
          "expression": "first(true, set('value', 'p', '$sd'))",
          "thenChild": {
            "t": "Text",
            "text": "'first(...set()) expression - expected - $sd=' + coalesce(data.p.$sd, 'NOT SET')"
          },
          "elseChild": {
            "t": "Text",
            "text": "'first expression - UNEXPECTED'"
          }
        },
        {
          "t": "If",
          "expression": "last(set('value', 'foo'), set('test', 'bar'), data.bar) == 'test'",
          "thenChild": {
            "t": "Text",
            "text": "'last(...set()) expression - expected - bar=' + coalesce(data.bar, 'NOT SET')"
          },
          "elseChild": {
            "t": "Text",
            "text": "'last expression - UNEXPECTED - bar=' + coalesce(data.bar, 'NOT SET')"
          }
        }
      ]
    }
  ]
}
